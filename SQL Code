# Create a Database called 'Library' 

CREATE DATABASE library;
USE library;

# Creating the Branch table

CREATE TABLE Branch
(
    Branch_no VARCHAR(10) PRIMARY KEY,          -- Unique identifier for each branch
    Manager_id VARCHAR(10),                                -- ID of the branch manager
    Branch_address VARCHAR(30),                         -- Address of the branch
    Contact_no VARCHAR(15)                                  -- Contact number of the branch
);

# Creating the Employee table

CREATE TABLE Employee
(
    Emp_id VARCHAR(10) PRIMARY KEY,                 -- Unique identifier for each employee
    Emp_name VARCHAR(30),                                  -- Name of the employee
    Position VARCHAR(30),                                        -- Position or job title of the employee
    Salary DECIMAL(10,2)                                          -- Salary of the employee
);

# Creating the Customer table

CREATE TABLE Customer
(
    Customer_Id VARCHAR(10) PRIMARY KEY,                  -- Unique identifier for each customer
    Customer_name VARCHAR(30),                                    -- Name of the customer
    Customer_address VARCHAR(30),                                -- Address of the customer
    Reg_date DATE                                                                 -- Registration date of the customer
);

# Creating the Books table

CREATE TABLE Books
(
    ISBN VARCHAR(10) PRIMARY KEY,                     -- Unique identifier for each book
    Book_title VARCHAR(50),                                   -- Title of the book
    Category VARCHAR(30),                                     -- Category or genre of the book
    Rental_Price DECIMAL(10,2),                            -- Rental price of the book
    Status VARCHAR(3) CHECK (Status IN ('Yes', 'No')),                -- Availability status of the book
    Author VARCHAR(30),                                       -- Author of the book
    Publisher VARCHAR(30)                                    -- Publisher of the book
);

# Creating the IssueStatus table

CREATE TABLE IssueStatus
(
    Issue_Id VARCHAR(10) PRIMARY KEY,               -- Unique identifier for each issue record
    Issued_cust VARCHAR(30),                                 -- Customer ID to whom the book is issued
    Issued_book_name VARCHAR(50),                  -- Name of the issued book
    Issue_date DATE,                                                 -- Date when the book was issued
    Isbn_book VARCHAR(15),                                  -- ISBN of the issued book
    FOREIGN KEY (Issued_cust) REFERENCES customer(Customer_id) ON DELETE CASCADE,  
                                                                                    -- Foreign key constraint
    FOREIGN KEY (Isbn_book) REFERENCES books(ISBN) ON DELETE CASCADE               
                                                                                    -- Foreign key constraint
);

# Creating the ReturnStatus table

CREATE TABLE ReturnStatus
(
    Return_id VARCHAR(10) PRIMARY KEY,             -- Unique identifier for each return record
    Return_cust VARCHAR(30),                                 -- Customer ID who returned the book
    Return_book_name VARCHAR(50),                   -- Name of the returned book
    Return_date DATE,                                               -- Date when the book was returned
    isbn_book2 VARCHAR(15),                                 -- ISBN of the returned book
    FOREIGN KEY (isbn_book2) REFERENCES books(ISBN) ON DELETE CASCADE            
                                                                                   -- Foreign key constraint
);


# Altering the Issued_book_name  and the Isbn_book column in the IssueStatus table

ALTER TABLE IssueStatus ALTER COLUMN Issued_book_name TYPE VARCHAR(80);
ALTER TABLE IssueStatus ALTER COLUMN Isbn_book TYPE VARCHAR(25);



# Altering the Return_book_name and the isbn_book2 column in the ReturnStatus table

ALTER TABLE ReturnStatus ALTER COLUMN Return_book_name TYPE VARCHAR(80);
ALTER TABLE ReturnStatus ALTER COLUMN isbn_book2 TYPE VARCHAR(25);



# Altering the ISBN and the Book_title column in the Books table

ALTER TABLE Books ALTER COLUMN ISBN TYPE VARCHAR(25);
ALTER TABLE Books ALTER COLUMN Book_title TYPE VARCHAR(80);


# Inserting data into the Branch table

INSERT INTO Branch (Branch_no, Manager_id, Branch_address, Contact_no) VALUES
('B006', 'M106', '321 Birch St', '+919099988681'),
('B007', 'M107', '654 Cedar St', '+919099988682'),
('B008', 'M108', '987 Spruce St', '+919099988683'),
('B009', 'M109', '234 Fir St', '+919099988684'),
('B010', 'M110', '567 Palm St', '+919099988685'),
('B011', 'M111', '890 Cypress St', '+919099988686'),
('B012', 'M112', '123 Redwood St', '+919099988687'),
('B013', 'M113', '456 Willow St', '+919099988688'),
('B014', 'M114', '789 Ash St', '+919099988689'),
('B015', 'M115', '987 Poplar St', '+919099988690'),
('B016', 'M116', '654 Dogwood St', '+919099988691'),
('B017', 'M117', '321 Magnolia St', '+919099988692'),
('B018', 'M118', '234 Sycamore St', '+919099988693'),
('B019', 'M119', '567 Beech St', '+919099988694'),
('B020', 'M120', '890 Cherry St', '+919099988695'),
('B021', 'M121', '123 Juniper St', '+919099988696'),
('B022', 'M122', '456 Hickory St', '+919099988697'),
('B023', 'M123', '789 Maple St', '+919099988698'),
('B024', 'M124', '987 Walnut St', '+919099988699'),
('B025', 'M125', '654 Pine St', '+919099988700');

# Selecting all data from the Branch table

SELECT * FROM Branch;

# Inserting data into the Employee table

INSERT INTO Employee (Emp_id, Emp_name, Position, Salary) VALUES
('E112', 'Andrew Scott', 'Clerk', 44000.00),
('E113', 'Patricia Green', 'Librarian', 56000.00),
('E114', 'Robert Hall', 'Assistant', 41500.00),
('E115', 'Linda Young', 'Manager', 63000.00),
('E116', 'Barbara Hernandez', 'Clerk', 45500.00),
('E117', 'James King', 'Librarian', 57500.00),
('E118', 'Elizabeth Wright', 'Assistant', 43500.00),
('E119', 'David Lopez', 'Manager', 66000.00),
('E120', 'Richard Hill', 'Clerk', 47000.00),
('E121', 'Susan Scott', 'Librarian', 58000.00),
('E122', 'Joseph Harris', 'Assistant', 42500.00),
('E123', 'Karen White', 'Manager', 64000.00),
('E124', 'Thomas Clark', 'Clerk', 46000.00),
('E125', 'Sarah Lewis', 'Librarian', 59000.00),
('E126', 'Paul Robinson', 'Assistant', 44000.00),
('E127', 'Lisa Walker', 'Manager', 67000.00),
('E128', 'Nancy Hall', 'Clerk', 48000.00),
('E129', 'Steven Allen', 'Librarian', 60000.00),
('E130', 'Mary King', 'Assistant', 45000.00),
('E131', 'Mark Wright', 'Manager', 68000.00),
('E132', 'Jennifer Scott', 'Clerk', 49000.00),
('E133', 'Michael Harris', 'Librarian', 61000.00),
('E134', 'William Lee', 'Assistant', 46000.00),
('E135', 'Jessica Young', 'Manager', 69000.00),
('E136', 'Linda Martinez', 'Clerk', 50000.00),
('E137', 'Elizabeth White', 'Librarian', 62000.00),
('E138', 'Christopher Thompson', 'Assistant', 47000.00),
('E139', 'George Walker', 'Manager', 70000.00),
('E140', 'Deborah Allen', 'Clerk', 51000.00),
('E141', 'Brian Hernandez', 'Librarian', 63000.00),
('E142', 'Dorothy Clark', 'Assistant', 48000.00),
('E143', 'Jason Robinson', 'Manager', 71000.00),
('E144', 'Donna Scott', 'Clerk', 52000.00),
('E145', 'Matthew Wright', 'Librarian', 64000.00),
('E146', 'Betty Green', 'Assistant', 49000.00),
('E147', 'Anthony Harris', 'Manager', 72000.00);

# Selecting all data from the Employee table

SELECT * FROM Employee;


# Inserting data into the Customer table

INSERT INTO Customer (Customer_Id, Customer_name, Customer_address, Reg_date) VALUES
('C006', 'Frank White', '123 Birch St', '2023-06-05'),
('C007', 'Grace Black', '234 Cedar St', '2023-06-10'),
('C008', 'Hank Green', '345 Spruce St', '2023-06-15'),
('C009', 'Ivy Blue', '456 Fir St', '2023-06-20'),
('C010', 'Jack Grey', '567 Palm St', '2023-06-25'),
('C011', 'Kim Brown', '678 Cypress St', '2023-06-30'),
('C012', 'Leo King', '789 Redwood St', '2023-07-05'),
('C013', 'Mia Queen', '890 Willow St', '2023-07-10'),
('C014', 'Nina Bell', '123 Ash St', '2023-07-15'),
('C015', 'Oscar Fox', '234 Poplar St', '2023-07-20'),
('C016', 'Paul Star', '345 Dogwood St', '2023-07-25'),
('C017', 'Quinn Wolf', '456 Magnolia St', '2023-07-30'),
('C018', 'Rose Moon', '567 Sycamore St', '2023-08-05'),
('C019', 'Sam Pine', '678 Beech St', '2023-08-10'),
('C020', 'Tina Snow', '789 Cherry St', '2023-08-15'),
('C021', 'Uma Wave', '890 Juniper St', '2023-08-20'),
('C022', 'Victor Lake', '123 Hickory St', '2023-08-25'),
('C023', 'Wendy Leaf', '234 Maple St', '2023-08-30'),
('C024', 'Xander Frost', '345 Walnut St', '2023-09-05'),
('C025', 'Yara Star', '456 Pine St', '2023-09-10'),
('C026', 'Zane Gale', '567 Oak St', '2023-09-15'),
('C027', 'Aiden Brook', '678 Cedar St', '2023-09-20'),
('C028', 'Bella Ray', '789 Elm St', '2023-09-25'),
('C029', 'Cody Gold', '890 Birch St', '2023-09-30'),
('C030', 'Daisy Dove', '123 Spruce St', '2023-10-05'),
('C031', 'Evan Moss', '234 Fir St', '2023-10-10'),
('C032', 'Fay Dawn', '345 Palm St', '2023-10-15'),
('C033', 'Gus Reed', '456 Cypress St', '2023-10-20'),
('C034', 'Hope Star', '567 Redwood St', '2023-10-25'),
('C035', 'Iris Shade', '678 Willow St', '2023-10-30'),
('C036', 'Jade Rain', '789 Ash St', '2023-11-05'),
('C037', 'Kyle Stone', '890 Poplar St', '2023-11-10'),
('C038', 'Lily Storm', '123 Dogwood St', '2023-11-15'),
('C039', 'Milo River', '234 Magnolia St', '2023-11-20'),
('C040', 'Nora Skye', '345 Sycamore St', '2023-11-25');

# Selecting all data from the Customer table

SELECT * FROM Customer;



# Inserting data into the Books table

INSERT INTO Books (ISBN, Book_title, Category, Rental_Price, Status, Author, Publisher) VALUES
('978-0-316-01792-3', 'The Shining', 'Horror', 7.00, 'Yes', 'Stephen King', 'Doubleday'),
('978-0-375-50444-2', 'A Thousand Splendid Suns', 'Fiction', 8.00, 'Yes', 'Khaled Hosseini', 'Riverhead'),
('978-0-394-52340-7', 'Beloved', 'Fiction', 6.50, 'No', 'Toni Morrison', 'Alfred A. Knopf'),
('978-0-7432-7350-2', 'The Road', 'Fiction', 7.50, 'Yes', 'Cormac McCarthy', 'Alfred A. Knopf'),
('978-0-7432-7351-9', 'Life of Pi', 'Fiction', 6.00, 'No', 'Yann Martel', 'Harcourt'),
('978-0-452-28240-1', 'The Hobbit', 'Fantasy', 8.50, 'Yes', 'J.R.R. Tolkien', 'Houghton'),
('978-0-307-34141-8', 'Becoming', 'Biography', 8.00, 'Yes', 'Michelle Obama', 'Crown'),
('978-0-446-61025-6', 'The Catch-22', 'Classic', 7.00, 'No', 'Joseph Heller', 'Simon & Schuster'),
('978-0-7432-7355-6', 'To Kill a Mockingbird', 'Classic', 7.00, 'Yes', 'Harper Lee', 'J.B. Lippincott'),
('978-0-7432-7356-3', '1984', 'Dystopian', 6.50, 'Yes', 'George Orwell', 'Secker & Warburg'),
('978-0-7432-7357-0', 'Brave New World', 'Dystopian', 6.00, 'Yes', 'Aldous Huxley', 'Chatto & Windus'),
('978-0-7432-7358-7', 'Fahrenheit 451', 'Dystopian', 5.50, 'No', 'Ray Bradbury', 'Ballantine'),
('978-0-7432-7359-4', 'Moby-Dick', 'Classic', 9.00, 'Yes', 'Herman Melville', 'Harper & Brothers'),
('978-0-7432-7360-0', 'War and Peace', 'Classic', 10.00, 'No', 'Leo Tolstoy', 'The Russian Messenger'),
('978-0-7432-7361-7', 'Pride and Prejudice', 'Classic', 4.50, 'No', 'Jane Austen', 'T. Egerton'),
('978-0-7432-7362-4', 'Wuthering Heights', 'Classic', 4.50, 'Yes', 'Emily Bronte', 'Thomas Cautley Newby'),
('978-0-7432-7363-1', 'Crime and Punishment', 'Classic', 5.50, 'Yes', 'Fyodor Dostoevsky', 'The Russian Messenger'),
('978-0-7432-7364-8', 'The Brothers Karamazov', 'Classic', 7.50, 'Yes', 'Fyodor Dostoevsky', 'The Russian Messenger'),
('978-0-7432-7365-5', 'Les Miserables', 'Classic', 8.50, 'Yes', 'Victor Hugo', 'A. Lacroix, Verboeckhoven & Cie'),
('978-0-7432-7366-2', 'The Picture of Dorian Gray', 'Classic', 6.00, 'Yes', 'Oscar Wilde', 'Lippincott's Monthly Magazine'),
('978-0-7432-7367-9', 'Frankenstein', 'Horror', 5.00, 'Yes', 'Mary Shelley', 'Lackington, Hughes, Harding, Mavor & Jones'),
('978-0-7432-7368-6', 'Dracula', 'Horror', 5.50, 'Yes', 'Bram Stoker', 'Archibald Constable and Company'),
('978-0-7468-4589-5', 'Chakri chaithu Bhanu', 'Mentfs', 6.20, 'Yes', 'Charan', 'Swaraj and Sons');

# Selecting all data from the Books table

SELECT * FROM Books;


# Inserting data into the IssueStatus table

INSERT INTO IssueStatus (Issue_id, Customer_id, Book_title, Issue_date, ISBN_book) VALUES
('IS106', 'C006', 'Animal Farm', '2023-05-06', '978-0-330-25864-8'),
('IS107', 'C007', 'One Hundred Years of Solitude', '2023-05-07', '978-0-14-118776-1'),
('IS108', 'C008', 'The Great Gatsby', '2023-05-08', '978-0-525-47535-5'),
('IS109', 'C009', 'Jane Eyre', '2023-05-09', '978-0-141-44171-6'),
('IS110', 'C010', 'The Alchemist', '2023-05-10', '978-0-307-37840-1'),
('IS111', 'C011', 'Harry Potter and the Sorcerer Stone', '2023-05-11', '978-0-679-76489-8'),
('IS112', 'C012', 'A Game of Thrones', '2023-05-12', '978-0-09-957807-9'),
('IS113', 'C013', 'A People History of the United States', '2023-05-13', '978-0-393-05081-8'),
('IS114', 'C014', 'The Guns of August', '2023-05-14', '978-0-19-280551-1'),
('IS115', 'C015', 'Guns, Germs, and Steel: The Fates of Human Societies', '2023-05-15', '978-0-393-91257-8'),
('IS116', 'C016', 'The Shining', '2023-05-16', '978-0-316-01792-3'),
('IS117', 'C017', 'A Thousand Splendid Suns', '2023-05-17', '978-0-375-50444-2'),
('IS118', 'C018', 'Beloved', '2023-05-18', '978-0-394-52340-7'),
('IS119', 'C019', 'The Road', '2023-05-19', '978-0-7432-7350-2'),
('IS120', 'C020', 'Life of Pi', '2023-05-20', '978-0-7432-7351-9'),
('IS121', 'C021', 'The Hobbit', '2023-05-21', '978-0-452-28240-1'),
('IS122', 'C022', 'Becoming', '2023-05-22', '978-0-307-34141-8'),
('IS123', 'C023', 'The Catch-22', '2023-05-23', '978-0-446-61025-6'),
('IS124', 'C024', 'To Kill a Mockingbird', '2023-05-24', '978-0-7432-7355-6'),
('IS125', 'C025', '1984', '2023-05-25', '978-0-7432-7356-3'),
('IS126', 'C026', 'Brave New World', '2023-05-26', '978-0-7432-7357-0'),
('IS127', 'C027', 'Fahrenheit 451', '2023-05-27', '978-0-7432-7358-7'),
('IS128', 'C028', 'Moby-Dick', '2023-05-28', '978-0-7432-7359-4'),
('IS129', 'C029', 'War and Peace', '2023-05-29', '978-0-7432-7360-0'),
('IS130', 'C030', 'Pride and Prejudice', '2023-05-30', '978-0-7432-7361-7');

# Selecting all data from the IssueStatus table

SELECT * FROM IssueStatus;



# Inserting data into the ReturnStatus table

INSERT INTO ReturnStatus (Return_id, Return_cust, Return_book_name, Return_date, ISBN_book2) VALUES
('RS106', 'C011', 'Harry Potter and the Sorcerer Stone', '2023-06-11', '978-0-679-76489-8'),
('RS107', 'C012', 'A People History of the United States', '2023-06-12', '978-0-393-05081-8'),
('RS108', 'C013', 'The Guns of August', '2023-06-13', '978-0-19-280551-1'),
('RS109', 'C014', 'Sapiens: A Brief History of Humankind', '2023-06-14', '978-0-307-58837-1'),
('RS110', 'C015', 'Guns, Germs, and Steel: The Fates of Human Societies', '2023-06-15', '978-0-393-91257-8'),
('RS111', 'C016', 'The Shining', '2023-06-16', '978-0-316-01792-3'),
('RS112', 'C017', 'A Thousand Splendid Suns', '2023-06-17', '978-0-375-50444-2'),
('RS113', 'C018', 'Beloved', '2023-06-18', '978-0-394-52340-7'),
('RS114', 'C019', 'The Road', '2023-06-19', '978-0-7432-7350-2'),
('RS115', 'C020', 'Life of Pi', '2023-06-20', '978-0-7432-7351-9'),
('RS116', 'C021', 'The Hobbit', '2023-06-21', '978-0-452-28240-1'),
('RS117', 'C022', 'Becoming', '2023-06-22', '978-0-307-34141-8'),
('RS118', 'C023', 'The Catch-22', '2023-06-23', '978-0-446-61025-6'),
('RS119', 'C024', 'To Kill a Mockingbird', '2023-06-24', '978-0-7432-7355-6'),
('RS120', 'C025', '1984', '2023-06-25', '978-0-7432-7356-3'),
('RS121', 'C026', 'Brave New World', '2023-06-26', '978-0-7432-7357-0'),
('RS122', 'C027', 'Fahrenheit 451', '2023-06-27', '978-0-7432-7358-7'),
('RS123', 'C028', 'Moby-Dick', '2023-06-28', '978-0-7432-7359-4'),
('RS124', 'C029', 'War and Peace', '2023-06-29', '978-0-7432-7360-0'),
('RS125', 'C030', 'Pride and Prejudice', '2023-06-30', '978-0-7432-7361-7');

# Selecting all data from the ReturnStatus table

SELECT * FROM ReturnStatus;



# Selecting Available Books

SELECT book_title, category, rental_price FROM books WHERE Status = 'Yes';


# Selecting Employee Names and Salaries

SELECT emp_name, salary FROM employee ORDER BY Salary DESC;



# Counting Books by Category

SELECT Category, COUNT(Book_title) FROM books GROUP BY Category;



# Selecting Employees with High Salaries

SELECT Emp_name, position FROM employee WHERE Salary > 50000;



# Adding Branch Number Column to Employee Table

ALTER TABLE employee ADD COLUMN branch_no VARCHAR(10);
ALTER TABLE employee ADD CONSTRAINT fk_branch FOREIGN KEY (branch_no) REFERENCES branch(branch_no);


# Assign Branch Numbers to Employees

UPDATE employee SET branch_no = 'B001' WHERE emp_id ='E101';
UPDATE employee SET branch_no = 'B001' WHERE emp_id ='E102';
UPDATE employee SET branch_no = 'B001' WHERE emp_id ='E103';
UPDATE employee SET branch_no = 'B001' WHERE emp_id ='E104';
UPDATE employee SET branch_no = 'B002' WHERE emp_id ='E105';
UPDATE employee SET branch_no = 'B003' WHERE emp_id ='E106';
UPDATE employee SET branch_no = 'B002' WHERE emp_id ='E107';
UPDATE employee SET branch_no = 'B002' WHERE emp_id ='E108';
UPDATE employee SET branch_no = 'B002' WHERE emp_id ='E109';
UPDATE employee SET branch_no = 'B004' WHERE emp_id ='E110';
UPDATE employee SET branch_no = 'B003' WHERE emp_id ='E111';



# Select All Employee Data

SELECT * FROM employee;



# Count Employees by Branch

SELECT branch_no, COUNT(emp_id) FROM employee GROUP BY branch_no;



# Select Book Titles in History Category

SELECT book_title FROM books WHERE Category = 'history';




# Count Employees by Branch with More Than 5 Employees

SELECT branch_no, COUNT(emp_id) FROM employee GROUP BY branch_no HAVING COUNT(Emp_id) > 5;

